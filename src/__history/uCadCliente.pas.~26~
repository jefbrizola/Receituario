unit uCadCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  TFrmCadClientes = class(TForm)
    EdCPF: TEdit;
    EdNome: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Button1: TButton;
    BtGravar: TButton;
    BtCons: TButton;
    Button2: TButton;
    BtExcluir: TButton;
    procedure Button1Click(Sender: TObject);
    procedure BtGravarClick(Sender: TObject);
    procedure BtConsClick(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure BtExcluirClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmCadClientes: TFrmCadClientes;
  Acao: string;



implementation

  uses ucliente, UCadastroCliente, URepositorioCliente ;

{$R *.dfm}

procedure TFrmCadClientes.BtConsClick(Sender: TObject);
var Cliente: TCliente;
    RepCliente : TRepositorioCliente;
begin
   Cliente:= TCliente.Create;
   RepCliente := TRepositorioCliente.Create;

   try
      try
        Cliente:= RepCliente.getCliente(EdCPF.Text);
      except
        on E: Exception do
        begin
          raise Exception.Create(E.Message);
        end;
      end;

      EdNome.Text:= Cliente.Nome;

   finally
    FreeAndNil(Cliente);
    FreeAndNil(RepCliente);
   end;


  EdCPF.Enabled:=false;
  EdNome.Enabled:=false;
  Acao:= 'Consulta'
end;

procedure TFrmCadClientes.BtExcluirClick(Sender: TObject);
var Cliente: TCliente;
    CadCliente : TCadastroCliente;
begin
   if Acao = 'Consulta' then
   begin
     Cliente:= TCliente.Create;
     CadCliente:= TCadastroCliente.Create;
     try
       Cliente.Nome:= EdNome.Text;
       Cliente.Documento:= EdCPF.Text;

       try
       CadCliente.Delete(Cliente);
       except
        on E: Exception do
        begin
           raise Exception.Create(E.Message);
        end;
      end;

     finally
        FreeAndNil(Cliente);
        FreeAndNil(CadCliente);
     end;

     ShowMessage('Cliente Excluído com Sucesso!');


   end;
end;

procedure TFrmCadClientes.BtGravarClick(Sender: TObject);
var Cliente: TCliente;
    CadCliente : TCadastroCliente;
begin
   Cliente:= TCliente.Create;
   CadCliente:= TCadastroCliente.Create;

   try
     Cliente.Nome:= EdNome.Text;
     Cliente.Documento:= EdCPF.Text;

     if Acao = 'Novo' then
       CadCliente.Insert(Cliente)
     else
     if Acao = 'Editar' then
     begin
       CadCliente.Update(Cliente);
     end;

   finally
    FreeAndNil(Cliente);
    FreeAndNil(CadCliente);
   end;



  EdCPF.Clear;
  EdNome.Clear;
  EdCPF.SetFocus;

end;

procedure TFrmCadClientes.Button1Click(Sender: TObject);
begin
 EdCPF.Enabled:=true;
 EdNome.Enabled:=true;
 EdCPF.Clear;
 EdNome.Clear;
 EdCPF.SetFocus;
 Acao:='Novo';

end;










procedure TFrmCadClientes.Button2Click(Sender: TObject);
begin
  if Acao = 'Consulta' then
  begin
    EdCPF.Enabled:=true;
    EdNome.Enabled:=true;
    EdNome.SetFocus;
    Acao:='Editar';
  end;


end;

end.
